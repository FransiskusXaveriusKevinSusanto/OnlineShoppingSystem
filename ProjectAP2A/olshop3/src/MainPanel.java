/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
        
/**
 *
 * @author Nivinity
 */
public class MainPanel extends javax.swing.JPanel {  
    private ProductManager productManager;
    private TransactionManager transactionManager;
    private List<CartItem> cart;
    
    public MainPanel() {
        initComponents();
        
        productManager = new ProductManager();
        transactionManager = new TransactionManager();
        cart = new ArrayList<>();

        initProductComboBox();
    }
    
    private void initProductComboBox() {
        cbProductList.removeAllItems();
        List<Product> allProducts = productManager.getAllProducts();

        for (Product p : allProducts) {
            double originalPrice = p.getPrice();
            double discount = 0;
            String diskonPersen = "0%";

            if (p instanceof Discountable) {
                discount = ((Discountable) p).getDiscount();
                diskonPersen = (int) ((discount / originalPrice) * 100) + "%";
            }

            double finalPrice = originalPrice - discount;

            cbProductList.addItem(p.getName() + " - Rp" + finalPrice + " (Diskon: " + diskonPersen + ")");
        }
    }


    
    private void updateCartView() {
        txtCart.setText("");
        double total = 0;

        for (CartItem item : cart) {
            Product p = item.getProduct();
            int qty = item.getQuantity();
            double hargaAwal = p.getPrice();
            double diskon = (p instanceof Discountable) ? ((Discountable) p).getDiscount() : 0;
            double hargaSetelahDiskon = hargaAwal - diskon;
            double subtotal = hargaSetelahDiskon * qty;

            txtCart.append(p.getName() + " - Rp" + hargaSetelahDiskon + " (" + qty + "x)\n");

            total += subtotal;
        }

        lblTotal.setText("Total: Rp " + total);
    }

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        cbProductList = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnRemoveItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCart = new javax.swing.JTextArea();
        lblTotal = new javax.swing.JLabel();
        btnCheckout = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtCustomerName1 = new javax.swing.JTextField();
        btnAddToCart1 = new javax.swing.JButton();
        btnEditQty = new javax.swing.JButton();

        setBackground(new java.awt.Color(249, 250, 251));
        setPreferredSize(new java.awt.Dimension(600, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(30, 58, 138));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Toko Kelontong Online");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel1)
                .addContainerGap(192, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 80));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Daftar Keranjang:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        txtQty.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 320, -1));

        cbProductList.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbProductList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbProductList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProductListActionPerformed(evt);
            }
        });
        add(cbProductList, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 320, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Nama Pelanggan:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        btnRemoveItem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnRemoveItem.setText("Hapus");
        btnRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemActionPerformed(evt);
            }
        });
        add(btnRemoveItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, -1, -1));
        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Jumlah Pesan:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        txtCart.setColumns(20);
        txtCart.setRows(5);
        jScrollPane2.setViewportView(txtCart);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 320, 100));

        lblTotal.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTotal.setText("Total: Rp0 ");
        add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 320, -1));

        btnCheckout.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnCheckout.setText("Checkout");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });
        add(btnCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, 90, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Daftar Produk:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        txtCustomerName1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(txtCustomerName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 320, -1));

        btnAddToCart1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAddToCart1.setText("Tambah");
        btnAddToCart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCart1ActionPerformed(evt);
            }
        });
        add(btnAddToCart1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        btnEditQty.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnEditQty.setText("Ubah Jumlah");
        btnEditQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditQtyActionPerformed(evt);
            }
        });
        add(btnEditQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemActionPerformed
        int selectedIndex = cbProductList.getSelectedIndex();
        if (selectedIndex >= 0) {
            Product selectedProduct = productManager.getAllProducts().get(selectedIndex);

            CartItem toRemove = null;
            for (CartItem item : cart) {
                if (item.getProduct().getProductId() == selectedProduct.getProductId()) {
                    toRemove = item;
                    break;
                }
            }

            if (toRemove != null) {
                cart.remove(toRemove);
                updateCartView();
            } else {
                JOptionPane.showMessageDialog(MainPanel.this, "Produk tidak ditemukan di keranjang.");
            }
        }
    }//GEN-LAST:event_btnRemoveItemActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
    String name = txtQty.getText();

    if (name.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan nama pelanggan!");
        return;
    }

    if (cart.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Keranjang belanja kosong.");
        return;
    }

    transactionManager.saveTransaction(name, cart);
    JOptionPane.showMessageDialog(this, "Transaksi berhasil disimpan!");

    cart.clear();
    updateCartView();
    txtQty.setText("");
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void btnAddToCart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCart1ActionPerformed
        int selectedIndex = cbProductList.getSelectedIndex();
        if (selectedIndex >= 0) {
            Product selectedProduct = productManager.getAllProducts().get(selectedIndex);

            int qty;
            try {
                qty = Integer.parseInt(txtQty.getText());
                if (qty <= 0) throw new NumberFormatException();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(MainPanel.this, "Masukkan jumlah yang valid (angka > 0).");
                return;
            }

            boolean found = false;
            for (CartItem item : cart) {
                if (item.getProduct().getProductId() == selectedProduct.getProductId()) {
                    JOptionPane.showMessageDialog(MainPanel.this, "Produk ini sudah ada di keranjang.");
                    found = true;
                    break;
                }
            }

            if (!found) {
                cart.add(new CartItem(selectedProduct, qty));
                updateCartView();
            }
        }
    }//GEN-LAST:event_btnAddToCart1ActionPerformed

    private void btnEditQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditQtyActionPerformed
        int selectedIndex = cbProductList.getSelectedIndex();
        if (selectedIndex >= 0) {
            Product selectedProduct = productManager.getAllProducts().get(selectedIndex);

            CartItem targetItem = null;
            for (CartItem item : cart) {
                if (item.getProduct().getProductId() == selectedProduct.getProductId()) {
                    targetItem = item;
                    break;
                }
            }

            if (targetItem == null) {
                JOptionPane.showMessageDialog(MainPanel.this, "Produk belum ada di keranjang.");
                return;
            }

            String newQtyStr = JOptionPane.showInputDialog("Masukkan jumlah baru:");
            if (newQtyStr != null) {
                try {
                    int newQty = Integer.parseInt(newQtyStr);
                    if (newQty <= 0) throw new NumberFormatException();

                    targetItem.addQuantity(-targetItem.getQuantity()); // reset ke 0
                    targetItem.addQuantity(newQty);
                    updateCartView();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(MainPanel.this, "Masukkan angka yang valid.");
                }
            }
        }
    }//GEN-LAST:event_btnEditQtyActionPerformed

    private void cbProductListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProductListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbProductListActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart1;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnEditQty;
    private javax.swing.JButton btnRemoveItem;
    private javax.swing.JComboBox<String> cbProductList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextArea txtCart;
    private javax.swing.JTextField txtCustomerName1;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables
}
